#! /usr/bin/env python3

from smartcard.System import readers

def readUUID(reader):
    COMMAND = [0xFF, 0xCA, 0x00, 0x00, 0x00]
    print ("READ")
    try:
        connection = reader.createConnection()
        connection.connect()
        data, sw1, sw2 = connection.transmit(COMMAND)
        print ("UID[]:", data)
        print ("UID h:", " ".join(['{:02X}'.format(h) for h in data]))
        print ("Command: %02X %02X" % (sw1, sw2))
        print('data', data, 'sw1', sw1, 'sw2', sw2)
    except Exception:
        print ("No card detected. ")

def authAndReadMifare(reader):
    print ("AUTHENTICATION AND READ CLASSIC")
    try:
        # LOAD_KEY = [0xFF, 0x82, 0x20, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]
        # AUTH = [0xFF, 0x86, 0x00, 0x00, 0x05, 0x01, 0x00, 0x08, 0x60, 0x00]
        # READ = [0xFF, 0xB0, 0x00, 0x08, 0x10]

        LOAD_KEY = [0xFF, 0x82, 0x20, 0x00, 0x06, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF]
        connection = reader.createConnection()
        connection.connect()
        data, sw1, sw2 = connection.transmit(LOAD_KEY)
        print('LOAD KEY:::: data', data, 'sw1', hex(sw1), 'sw2', hex(sw2))
        # sector = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F]
        # block = [0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17, 0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F, 0x20, 0x21, 0x22, 0x23, 0x24, 0x25, 0x26, 0x27, 0x28, 0x29, 0x2A, 0x2B, 0x2C, 0x2D, 0x2E, 0x2F, 0x30, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x3A, 0x3B, 0x3C, 0x3D, 0x3E, 0x3F, 0x40, 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x5B, 0x5C, 0x5D, 0x5E, 0x5F, 0x80, 0x81, 0x82, 0x83, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0xFF, 0xEF]
        marca = 16
        dataHex = ''
        for i in range(16, 127):
            if i != marca+3:
                if sw1==144 and sw2 == 0:
                    AUTH = [0xFF, 0x86, 0x00, 0x00, 0x05, 0x01, 0x00, i, 0x60, 0x00]
                    data, sw1, sw2 = connection.transmit(AUTH)
                    READ = [0xFF, 0xB0, 0x00, i, 0x10]
                    data, sw1, sw2 = connection.transmit(READ)
                    if sw1==144 and sw2 == 0:
                        print('READ:::::Bloque:::::', i,  'data', data, 'sw1', hex(sw1), 'sw2', hex(sw2))
                        for j in data:
                            if j != 0:
                                h=str(hex(j)).replace('0x', '')
                                if j <=16 : h = '0'+h
                                dataHex = dataHex + bytes.fromhex(h).decode('utf-8')
                                #dataHex = dataHex + h
            else:
                marca = marca + 4
        print(dataHex)
        #print(bytes.fromhex(dataHex).decode('utf-8'))
    except Exception:
        print ("No card detected. "+Exception)

# get all the available readers
r = readers()
print ("Available readers:", r)

reader = r[0]
print ("Using:", reader)
authAndReadMifare(reader)